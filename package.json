{
  "name": "growi",
  "version": "4.3.2-RC",
  "description": "Team collaboration software using markdown",
  "tags": [
    "wiki",
    "communication",
    "documentation",
    "collaboration"
  ],
  "author": "Yuki Takei <yuki@weseek.co.jp>",
  "contributors": [],
  "license": "MIT",
  "homepage": "https://growi.org",
  "repository": {
    "type": "git",
    "url": "https://github.com/weseek/growi.git"
  },
  "bugs": {
    "url": "https://github.com/weseek/growi/issues"
  },
  "private": true,
  "workspaces": {
    "packages": ["packages/*"],
    "nohoist": ["**/slackbot-proxy/bootstrap"]
  },
  "scripts": {
    "build:api:jsdoc": "swagger-jsdoc -o tmp/swagger.json -d config/swagger-definition.js",
    "build:apiv3:jsdoc": "cross-env API_VERSION=3 npm run build:api:jsdoc -- \"src/server/routes/apiv3/**/*.js\" \"src/server/models/**/*.js\"",
    "build:apiv1:jsdoc": "cross-env API_VERSION=1 npm run build:api:jsdoc -- \"src/server/*/*.js\" \"src/server/models/**/*.js\"",
    "build:dev:app:watch": "npm run build:dev:app -- --watch",
    "build:dev:app:watch:poll": "npm run build:dev:app -- --watch --watch-poll",
    "build:dev:app": "env-cmd -f config/env.dev.js webpack --config config/webpack.dev.js --progress",
    "build:dev:watch": "npm run build:dev:app:watch",
    "build:dev:watch:poll": "npm run build:dev:app:watch:poll",
    "build:dev": "yarn build:dev:app",
    "build:prod": "yarn lerna run build --scope @growi/app --scope @growi/slack",
    "build:slack": "lerna run build --scope @growi/slack",
    "build": "npm run build:dev:watch",
    "build:poll": "npm run build:dev:watch:poll",
    "clean:app": "rimraf -- public/js public/styles",
    "clean:report": "rimraf -- report",
    "clean": "npm-run-all -p clean:*",
    "console": "env-cmd -f config/env.dev.js node --experimental-repl-await src/server/console.js",
    "lint:js:fix": "eslint \"**/*.{js,jsx}\" --fix",
    "lint:js": "eslint \"**/*.{js,jsx}\"",
    "lint:styles:fix": "stylelint --fix src/client/styles/scss/**/*.scss",
    "lint:styles": "stylelint src/client/styles/scss/**/*.scss",
    "lint:swagger2openapi": "node node_modules/swagger2openapi/oas-validate tmp/swagger.json",
    "lint": "npm-run-all -p lint:js lint:styles lint:swagger2openapi",
    "migrate": "npm run migrate:up",
    "migrate:create": "migrate-mongo create -f config/migrate.js -- ",
    "migrate:status": "migrate-mongo status -f config/migrate.js",
    "migrate:up": "migrate-mongo up -f config/migrate.js",
    "migrate:down": "migrate-mongo down -f config/migrate.js",
    "plugin:def": "node bin/generate-plugin-definitions-source.js",
    "prebuild:dev:watch": "npm run prebuild:dev",
    "prebuild:dev": "npm run clean:app && env-cmd -f config/env.dev.js npm run plugin:def && env-cmd -f config/env.dev.js npm run resource && yarn build:slack",
    "prelint:swagger2openapi": "npm run build:apiv3:jsdoc",
    "preserver:prod": "npm run migrate",
    "prestart": "npm run build:prod",
    "resource": "node bin/download-cdn-resources.js",
    "i18n-json-merge:withTran": "rs-i18n -lan -- -t",
    "i18n-json-merge:noTran": "rs-i18n -lan --",
    "i18n-json-merge": "npm run i18n-json-merge:withTran --",
    "server:nolazy": "env-cmd -f config/env.dev.js node-dev --nolazy --inspect src/server/app.js",
    "server:dev": "env-cmd -f config/env.dev.js node-dev --expose_gc --inspect src/server/app.js",
    "server:prod:ci": "npm run server:prod -- --ci",
    "server:prod": "env-cmd -f config/env.prod.js node --expose_gc src/server/app.js",
    "server": "npm run server:dev",
    "start": "npm run server:prod",
    "test": "jest --config=config/jest.config.js --passWithNoTests -- ",
    "version": "node -p \"require('./package.json').version\"",
    "webpack": "webpack"
  },
  "dependencies": {
  },
  "devDependencies": {
    "lerna": "^4.0.0"
  },
  "_moduleAliases": {
    "@root": ".",
    "@commons": "src/lib",
    "@server": "src/server",
    "@alias/logger": "src/lib/service/logger",
    "debug": "src/lib/service/logger/alias-for-debug"
  },
  "jest": {
    "moduleNameMapper": {
      "@commons/(.*)": "<rootDir>/src/lib/$1"
    }
  },
  "engines": {
    "node": "^12 || ^14",
    "npm": ">=6.11.3 <7",
    "yarn": ">=1.19.1 <2"
  }
}
